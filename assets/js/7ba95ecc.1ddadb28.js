"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[8256],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(t),m=r,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return t?a.createElement(h,o(o({ref:n},c),{},{components:t})):a.createElement(h,o({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5064:function(e,n,t){t.d(n,{Z:function(){return u}});var a=t(7294),r=t(9443);var i=function(){var e=(0,a.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},o=t(6010),l="tabItem_1uMI",s="tabItemActive_2DSg";var u=function(e){var n,t=e.lazy,r=e.block,u=e.defaultValue,c=e.values,p=e.groupId,d=e.className,m=a.Children.toArray(e.children),h=null!=c?c:m.map((function(e){return{value:e.props.value,label:e.props.label}})),k=null!=u?u:null==(n=m.find((function(e){return e.props.default})))?void 0:n.props.value,f=i(),b=f.tabGroupChoices,v=f.setTabGroupChoices,g=(0,a.useState)(k),y=g[0],N=g[1],w=[];if(null!=p){var D=b[p];null!=D&&D!==y&&h.some((function(e){return e.value===D}))&&N(D)}var T=function(e){var n=e.currentTarget,t=w.indexOf(n),a=h[t].value;N(a),null!=p&&(v(p,a),setTimeout((function(){var e,t,a,r,i,o,l,u;(e=n.getBoundingClientRect(),t=e.top,a=e.left,r=e.bottom,i=e.right,o=window,l=o.innerHeight,u=o.innerWidth,t>=0&&i<=u&&r<=l&&a>=0)||(n.scrollIntoView({block:"center",behavior:"smooth"}),n.classList.add(s),setTimeout((function(){return n.classList.remove(s)}),2e3))}),150))},O=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a=w.indexOf(e.target)+1;t=w[a]||w[0];break;case"ArrowLeft":var r=w.indexOf(e.target)-1;t=w[r]||w[w.length-1]}null==(n=t)||n.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":r},d)},h.map((function(e){var n=e.value,t=e.label;return a.createElement("li",{role:"tab",tabIndex:y===n?0:-1,"aria-selected":y===n,className:(0,o.Z)("tabs__item",l,{"tabs__item--active":y===n}),key:n,ref:function(e){return w.push(e)},onKeyDown:O,onFocus:T,onClick:T},null!=t?t:n)}))),t?(0,a.cloneElement)(m.filter((function(e){return e.props.value===y}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},m.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==y})}))))}},9443:function(e,n,t){var a=(0,t(7294).createContext)(void 0);n.Z=a},7337:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return u},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return d},default:function(){return k}});var a,r=t(7462),i=t(3366),o=(t(7294),t(3905)),l=t(5064),s=["components"],u={},c="Manually",p={unversionedId:"install/manually",id:"install/manually",isDocsHomePage:!1,title:"Manually",description:"Only Linux systems are supported",source:"@site/docs/compose/install/manually.mdx",sourceDirName:"install",slug:"/install/manually",permalink:"/docs/compose/install/manually",editUrl:"https://github.com/pektin-dns/pektin-docs/edit/main/docs/compose/install/manually.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Hetzner Cloud",permalink:"/docs/compose/install/ansible/hetzner"},next:{title:"First Steps",permalink:"/docs/compose/first-steps"}},d=[{value:"Required software/commands",id:"required-softwarecommands",children:[]},{value:"On your main node/server",id:"on-your-main-nodeserver",children:[{value:"Navigate to a folder where to store the config for your setup in.",id:"navigate-to-a-folder-where-to-store-the-config-for-your-setup-in",children:[]},{value:"Clone the Compose repo",id:"clone-the-compose-repo",children:[]},{value:"Edit the pektin-config.json to your liking",id:"edit-the-pektin-configjson-to-your-liking",children:[]},{value:"Run the install script",id:"run-the-install-script",children:[]},{value:"Run the server",id:"run-the-server",children:[]}]},{value:"On arbeiter/worker/secondary nodes/servers",id:"on-arbeiterworkersecondary-nodesservers",children:[{value:"Single Script",id:"single-script",children:[]},{value:"Secrets/Scripts folder",id:"secretsscripts-folder",children:[]}]}],m=(a="TabItem",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.kt)("div",e)}),h={toc:d};function k(e){var n=e.components,t=(0,i.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},h,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"manually"},"Manually"),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Only Linux systems are supported"))),(0,o.kt)("h2",{id:"required-softwarecommands"},"Required software/commands"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"git"),(0,o.kt)("li",{parentName:"ul"},"docker"),(0,o.kt)("li",{parentName:"ul"},"docker-compose"),(0,o.kt)("li",{parentName:"ul"},"bash"),(0,o.kt)("li",{parentName:"ul"},"cd, echo, mkdir, rm")),(0,o.kt)("h2",{id:"on-your-main-nodeserver"},"On your main node/server"),(0,o.kt)("h3",{id:"navigate-to-a-folder-where-to-store-the-config-for-your-setup-in"},"Navigate to a folder where to store the config for your setup in."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"cd /opt/\n")),(0,o.kt)("h3",{id:"clone-the-compose-repo"},"Clone the Compose repo"),(0,o.kt)(l.Z,{groupId:"git-type",mdxType:"Tabs"},(0,o.kt)(m,{value:"gitlab",label:"GitLab",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://gitlab.com/pektin/pektin-compose\n"))),(0,o.kt)(m,{value:"github",label:"GitHub",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/pektin-dns/pektin-compose\n"))),(0,o.kt)(m,{value:"git.y.gy",label:"git.y.gy",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://git.y.gy/pektin/pektin-compose\n")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"cd /opt/pektin-compose\n")),(0,o.kt)("h3",{id:"edit-the-pektin-configjson-to-your-liking"},"Edit the pektin-config.json to your liking"),(0,o.kt)("p",null,"If you are using vscode you should get intellisense for that.\nThe JSON schema can be found ",(0,o.kt)("a",{parentName:"p",href:"https://git.y.gy/pektin/pektin-config/-/raw/main/pektin-config.schema.json"},"here"),"\nThe config has to contain all keys and values. (No optionals/hidden defaults)"),(0,o.kt)(l.Z,{groupId:"config-type",mdxType:"Tabs"},(0,o.kt)(m,{value:"comments",label:"Comments",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsonc"},'{\n    // The services you want to use\n    "services": {\n        "server": {\n            "enabled": true,\n            "logging": "main,pektin_server",\n            "build": {\n                "enabled": true,\n                "path": "/home/paul/Documents/pektin/pektin-server",\n                "dockerfile": "dev.Dockerfile"\n            }\n        },\n        "ui": {\n            "enabled": true,\n            "domain": "pektin.club",\n            "subDomain": "ui",\n            "build": {\n                "enabled": false,\n                "path": "/home/paul/Documents/pektin/pektin-ui",\n                "dockerfile": "Dockerfile"\n            }\n        },\n        "api": {\n            "domain": "pektin.club",\n            "subDomain": "api",\n            "logging": "main,pektin_api",\n            "perimeterAuth": false,\n            "build": {\n                "enabled": true,\n                "path": "/home/paul/Documents/pektin/pektin-api",\n                "dockerfile": "dev.Dockerfile"\n            }\n        },\n        "vault": {\n            "domain": "pektin.club",\n            "subDomain": "vault",\n            "perimeterAuth": false,\n            "build": {\n                "enabled": false,\n                "path": "",\n                "dockerfile": "Dockerfile"\n            }\n        },\n        "tnt": {\n            "enabled": true,\n            "domain": "pektin.club",\n            "subDomain": "tnt",\n            "build": {\n                "enabled": true,\n                "path": "/home/paul/Documents/pektin/pektin-tnt",\n                "dockerfile": "Dockerfile"\n            }\n        },\n        "ribston": {\n            "enabled": true,\n            "build": {\n                "enabled": false,\n                "path": "/home/paul/Documents/pektin/pektin-ribston",\n                "dockerfile": "Dockerfile"\n            }\n        },\n        "opa": {\n            "enabled": false,\n            "build": {\n                "enabled": false,\n                "path": "",\n                "dockerfile": "Dockerfile"\n            }\n        }\n    },\n    // The nodes/machines you want to install pektin on\n    // The main node is the one with the API\n    // YES it is also possible to only use one node\n    "nodes": [\n        {\n            "main": true,\n            "name": "balduin",\n            "ips": ["2a01:4f9:c01f:80::"]\n        },\n        {\n            "name": "gustav",\n            "ips": ["2a01:4f9:c01f:80::"],\n            // The setup on the main node will generate a script/files that are used to setup the arbeiter/worker/secondary nodes\n            "setup": {\n                "system": "ubuntu",\n                "root": {\n                    "disableSystemdResolved": true,\n                    "installDocker": true\n                },\n                "cloneRepo": true,\n                "setup": true,\n                "start": true\n            }\n        }\n    ],\n    // The nameservers you want to use for your primary server\n    // This will setup the default domain right away\n    "nameservers": [\n        {\n            "subDomain": "ns1",\n            "domain": "pektin.club",\n            "node": "balduin",\n            "main": true\n        },\n        {\n            "subDomain": "ns2",\n            "domain": "pektin.club",\n            "node": "gustav"\n        }\n    ],\n    "letsencrypt": {\n        "enabled": true,\n        "letsencryptEmail": "test@pektin.club"\n    },\n    "usePolicies": "ribston",\n    "reverseProxy": {\n        // This is important if you already have a traefik container running on your main node\n        "createTraefik": true,\n        "routing": "local",\n        "tls": false,\n        "tempZone": {\n            "enabled": true,\n            "provider": "pektin.zone",\n            "routing": "local"\n        },\n        "traefikUi": {\n            "enabled": true,\n            "domain": "pektin.club",\n            "subDomain": "traefik"\n        },\n        "external": {\n            // This generates the proxy config to external services you may or may not use\n            "domain": "pektin.club",\n            "subDomain": "pektin-proxy",\n            "enabled": true,\n            "services": [\n                {\n                    "name": "gandi",\n                    "enabled": true,\n                    "domain": "api.gandi.net",\n                    "accessControlAllowMethods": ["OPTIONS", "POST", "GET", "DELETE"]\n                },\n                {\n                    "name": "crt",\n                    "enabled": true,\n                    "domain": "crt.sh",\n                    "accessControlAllowMethods": ["OPTIONS", "GET"]\n                }\n            ]\n        }\n    }\n}\n'))),(0,o.kt)(m,{value:"no-comments",label:"No Comments",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "services": {\n        "server": {\n            "enabled": true,\n            "logging": "main,pektin_server",\n            "build": {\n                "enabled": true,\n                "path": "/home/paul/Documents/pektin/pektin-server",\n                "dockerfile": "dev.Dockerfile"\n            }\n        },\n        "ui": {\n            "enabled": true,\n            "domain": "pektin.club",\n            "subDomain": "ui",\n            "build": {\n                "enabled": false,\n                "path": "/home/paul/Documents/pektin/pektin-ui",\n                "dockerfile": "Dockerfile"\n            }\n        },\n        "api": {\n            "domain": "pektin.club",\n            "subDomain": "api",\n            "logging": "main,pektin_api",\n            "perimeterAuth": false,\n            "build": {\n                "enabled": true,\n                "path": "/home/paul/Documents/pektin/pektin-api",\n                "dockerfile": "dev.Dockerfile"\n            }\n        },\n        "vault": {\n            "domain": "pektin.club",\n            "subDomain": "vault",\n            "perimeterAuth": false,\n            "build": {\n                "enabled": false,\n                "path": "",\n                "dockerfile": "Dockerfile"\n            }\n        },\n        "tnt": {\n            "enabled": true,\n            "domain": "pektin.club",\n            "subDomain": "tnt",\n            "build": {\n                "enabled": true,\n                "path": "/home/paul/Documents/pektin/pektin-tnt",\n                "dockerfile": "Dockerfile"\n            }\n        },\n        "ribston": {\n            "enabled": true,\n            "build": {\n                "enabled": false,\n                "path": "/home/paul/Documents/pektin/pektin-ribston",\n                "dockerfile": "Dockerfile"\n            }\n        },\n        "opa": {\n            "enabled": false,\n            "build": {\n                "enabled": false,\n                "path": "",\n                "dockerfile": "Dockerfile"\n            }\n        }\n    },\n    "nodes": [\n        {\n            "main": true,\n            "name": "balduin",\n            "ips": ["2a01:4f9:c01f:80::"]\n        },\n        {\n            "name": "gustav",\n            "ips": ["2a01:4f9:c01f:80::"],\n            "setup": {\n                "system": "ubuntu",\n                "root": {\n                    "disableSystemdResolved": true,\n                    "installDocker": true\n                },\n                "cloneRepo": true,\n                "setup": true,\n                "start": true\n            }\n        }\n    ],\n    "nameservers": [\n        {\n            "subDomain": "ns1",\n            "domain": "pektin.club",\n            "node": "balduin",\n            "main": true\n        },\n        {\n            "subDomain": "ns2",\n            "domain": "pektin.club",\n            "node": "gustav"\n        }\n    ],\n    "letsencrypt": {\n        "enabled": true,\n        "letsencryptEmail": "test@pektin.club"\n    },\n    "usePolicies": "ribston",\n    "reverseProxy": {\n        "createTraefik": true,\n        "routing": "local",\n        "tls": false,\n        "tempZone": {\n            "enabled": true,\n            "provider": "pektin.zone",\n            "routing": "local"\n        },\n        "traefikUi": {\n            "enabled": true,\n            "domain": "pektin.club",\n            "subDomain": "traefik"\n        },\n        "external": {\n            "domain": "pektin.club",\n            "subDomain": "pektin-proxy",\n            "enabled": true,\n            "services": [\n                {\n                    "name": "gandi",\n                    "enabled": true,\n                    "domain": "api.gandi.net",\n                    "accessControlAllowMethods": ["OPTIONS", "POST", "GET", "DELETE"]\n                },\n                {\n                    "name": "crt",\n                    "enabled": true,\n                    "domain": "crt.sh",\n                    "accessControlAllowMethods": ["OPTIONS", "GET"]\n                }\n            ]\n        }\n    }\n}\n')))),(0,o.kt)("h3",{id:"run-the-install-script"},"Run the install script"),(0,o.kt)("p",null,"This will setup the config for Vault, Keydb etc., create secrets and scripts to administrate the compose setup"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"bash setup.sh\n")),(0,o.kt)("h3",{id:"run-the-server"},"Run the server"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"bash start.sh\n")),(0,o.kt)("h2",{id:"on-arbeiterworkersecondary-nodesservers"},"On arbeiter/worker/secondary nodes/servers"),(0,o.kt)("p",null,"The install on the main node will create the installer scripts/files for the other nodes."),(0,o.kt)("p",null,"They can be found in the ",(0,o.kt)("inlineCode",{parentName:"p"},"arbeiter")," folder"),(0,o.kt)("p",null,"This will create two options:"),(0,o.kt)("h3",{id:"single-script"},"Single Script"),(0,o.kt)("p",null,"A single script that installs everything on the other named node: ",(0,o.kt)("inlineCode",{parentName:"p"},"arbeiter/<NODE_NAME>.sh")),(0,o.kt)("p",null,"You can copy paste this as a .sh file to the other node."),(0,o.kt)("p",null,"For example in ",(0,o.kt)("inlineCode",{parentName:"p"},"/opt/<NODE_NAME>.sh")," this will create ",(0,o.kt)("inlineCode",{parentName:"p"},"/opt/pektin-compose")," and install docker, docker compose etc. and setup all the secrets."),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"You could also just copy paste the script directly into the shell but this may be not ",(0,o.kt)("strong",{parentName:"p"},"as")," secure as it contains secrets."))),(0,o.kt)("h3",{id:"secretsscripts-folder"},"Secrets/Scripts folder"),(0,o.kt)("p",null,"You can also copy all the files from the folder: ",(0,o.kt)("inlineCode",{parentName:"p"},"arbeiter/<NODE_NAME>/")," over to the arbeiter node"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Clone the ",(0,o.kt)("inlineCode",{parentName:"li"},"pektin-compose")," repo to the arbeiter node"),(0,o.kt)("li",{parentName:"ol"},"Copy the script files and secrets folder in the pektin-compose folder on the arbeiter node"),(0,o.kt)("li",{parentName:"ol"},"Run ",(0,o.kt)("inlineCode",{parentName:"li"},"bash setup.sh")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"bash start.sh"))))}k.isMDXComponent=!0},6010:function(e,n,t){function a(e){var n,t,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=a(e[n]))&&(r&&(r+=" "),r+=t);else for(n in e)e[n]&&(r&&(r+=" "),r+=n);return r}function r(){for(var e,n,t=0,r="";t<arguments.length;)(e=arguments[t++])&&(n=a(e))&&(r&&(r+=" "),r+=n);return r}t.d(n,{Z:function(){return r}})}}]);